document.addEventListener("DOMContentLoaded", function () {
    var selectVulnerability = document.querySelector("#banco-vuls");
    var title = document.querySelector("#id_title")
    var severity = document.querySelector("#id_severity")
    var cvss = document.querySelector("#id_cvss")
    var description = document.querySelector("#id_description")
    var mitigation = document.querySelector("#id_mitigation")
    var impact = document.querySelector("#id_impact")
    var reference = document.querySelector("#id_reference")

    selectVulnerability.addEventListener("change", function (event) {
        var option = event.target.options[selectVulnerability.selectedIndex]

        title.value = option.dataset.title
        severity.value = option.dataset.severity
        cvss.value = option.dataset.cvss
        description.value = option.dataset.description
        mitigation.value = option.dataset.mitigation
        impact.value = option.dataset.impact
        reference.value = option.dataset.reference
    })
})

$(document).on('click', '#add-vul', function () {
    $('.disabled-class').removeAttr('disabled');
});



$(document).on('click', '#updateConclusion', function () {
    confirmModal(
        'Atualizar Conclusão',
        'Você tem certeza que deseja atualizar a conclusão da vulnerabilidade?',
        'Atualizar',
        'Cancelar',
        () => updateOrCreateConclusion()
    )
});


$(document).on("htmx:afterRequest", function (event) {
    if (event.detail.target.id === "update-conclusion") {
        if (event.detail.xhr.status === 200) {
            successModal('Conclusão Atualizada', 'A conclusão da vulnerabilidade foi atualizada com sucesso.');
        }
        else if (event.detail.xhr.status >= 400 && event.detail.xhr.status < 500) {
            errorModal('Erro ao Atualizar Conclusão', 'Ocorreu um erro ao atualizar a conclusão da vulnerabilidade.');
        }
        else if (event.detail.xhr.status >= 500) {
            errorModal('Erro ao Atualizar Conclusão', 'Ocorreu um erro no servidor ao atualizar a conclusão da vulnerabilidade.');
        }
        $("#conclusionModal").modal('hide');
        setTimeout(() => {
            location.reload();
        }, 3000);
    }
    setTimeout(() => {
        location.reload();
    }, 3000);

});

function updateOrCreateConclusion() {
    $('.disabled-class').removeAttr('disabled');
    htmx.trigger("#update-conclusion", 'submit');
}
