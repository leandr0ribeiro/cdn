$(document).ready(function () {
    $("#pentestSeverity").on("change", ".getSeverity", function (e) {
        let severityContext = this;
        const tabela = $('#pentestTable').DataTable();
        const row = tabela.row(severityContext.closest('tr'))
        const rowData = row.data();
        rowData.severity = getSeverityByName(severityContext.value);

        $("#severityChangeConfirmationModal").modal("show");
        $("#severityDeleteConfirmationButton").on("show");

        $('#severityDeleteConfirmationButton').on('hidden.bs.modal', function (e) {
            console.log('O modal foi fechado');
            window.location.reload();
        });

        $('#severityChangeConfirmationModal').on('hidden.bs.modal', function (e) {
            console.log('O modal foi fechado');
            window.location.reload();
        });

        $('#severityChangeConfirmationButton').click(function (event) {
            const url = `/pentest/vulnerabilities/update/${rowData.id}`;
            const csrfToken = $('input[name="csrfmiddlewaretoken"]').val();

            const requestOptions = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': csrfToken,
                },
                body: JSON.stringify(rowData),
            };

            fetch(url, requestOptions)
                .then(_ => {
                    window.location.reload();
                })
                .catch(error => {
                    console.error('Erro!', error);
                });

        });
    });

    $('#pentestTable').DataTable({
        "responsive": true,
        "processing": true,
        "serverSide": true,
        "searching": true,
        "ajax": "/pentest/vulnerabilities/json",
        "columnDefs": [
            // { "orderable": false, targets: [-2] },
            {
                "targets": "_all",
                "className": "text-center",
            },
        ],
        "columns": [
            { "data": "host", "name": "host" },
            {
                "data": 'severity',
                "name": "severity",
                "render": function (data, type, row) {
                    let riskOptions = [
                        { value: "Critico", color: "#cf3e3c", label: "Critico" },
                        { value: "Alto", color: "#efab39", label: "Alto" },
                        { value: "Medio", color: "#f3d877", label: "Médio" },
                        { value: "Baixo", color: "#419582", label: "Baixo" },
                        { value: "Informacional", color: "#90C9FC", label: "Informacional" }
                    ];

                    if (!data) {
                        return ``;
                    }

                    if (data.admin) {
                        let selectSeverity = riskOptions.find((option) => option.value === data.severity);
                        return `
                            <select
                                id="${data}"
                                class="getSeverity text-center"
                                style="background-color: ${selectSeverity.color}; color: #fff; border-radius: 20px; padding: 5px 15px;"
                            >
                                ${riskOptions.map(
                            (option) => `
                                        <option
                                            value="${option.value}"
                                            ${option.value === selectSeverity.value ? 'selected' : ''}
                                        >${option.label}</option>`).join('')
                            }
                            </select>`;
                    } else {
                        let selectSeverity = riskOptions.find((option) => option.value === data.severity);
                        return `
                            <div
                                id="${data.severity}"
                                style="background-color: ${selectSeverity.color}; color: #fff ; border-radius: 20px; padding: 5px 15px;"
                            >
                                ${selectSeverity.label}
                            </div>`;
                    }
                },
            },
            { "data": 'name', "name": "name" },
            { "data": "port", "name": "port" },
            { "data": "cvss", "name": "cvss" },
            {
                "data": "status", "name": "status",
                "render": function (data, type, row) {
                    let riskOptions = [
                        { value: 1, color: "#cf3e3c", label: "Falha identificada" },
                        { value: 2, color: "#efab39", label: "Em correção" },
                        { value: 3, color: "#f3d877", label: "Falha de reteste" },
                        { value: 4, color: "#800080 ", label: "Risco aceito" },
                        { value: 5, color: "#90C9FC", label: "Reteste" },
                        { value: 6, color: "#419582 ", label: "Concluído" }
                    ];

                    if (!data) {
                        return ``;
                    }

                    if (data.admin) {
                        let selectSeverity = riskOptions.find((option) => option.value === data);
                        return `
                        <select
                            id="${data}"
                            class="getSeverity text-center"
                            style="background-color: ${selectSeverity.color}; color: #fff; border-radius: 20px; padding: 5px 15px;"
                        >
                            ${riskOptions.map(
                            (option) => `
                                    <option
                                        value="${option.value}"
                                        ${option.value === selectSeverity.value ? 'selected' : ''}
                                    >${option.label}</option>`).join('')
                            }
                        </select>`;
                    } else {
                        let selectSeverity = riskOptions.find((option) => option.value === data);
                        return `
                        <div
                            id="${data}"
                            style="background-color: ${selectSeverity.color}; color: #fff ; border-radius: 20px; padding: 5px 15px;"
                        >
                            ${selectSeverity.label}
                        </div>`;
                    }
                },
            },
            {
                "data": "severity",
                "render": function (data, type, row) {
                    if (!data) {
                        return '';
                    }

                    if (data.admin) {
                        return generateAdminActionButtons(data);
                    } else {
                        return generateUserActionButtons(data);
                    }
                }
            },
        ],

        "language": {
            "lengthMenu": "Mostrando _MENU_ registros por página",
            "zeroRecords": "Nada encontrado",
            "info": "Mostrando página _PAGE_ de _PAGES_",
            "infoEmpty": "Nenhum registro disponível",
            "infoFiltered": "(filtrado de _MAX_ registros no total)",
            "search": "Pesquisar",
            "searchPlaceholder": "Buscar registros",
            "paginate": {
                "first": "Primeiro",
                "last": "Último",
                "next": "Seguinte",
                "previous": "Anterior"
            },
        }
    });

    $('#pentestSeverity').on('click', '.edit-row', function (event) {
        const tabela = $('#pentestTable').DataTable();
        const row = event.target.closest('tr');
        const rowData = tabela.row(row).data();

        const url = `/pentest/vulnerabilities/${rowData.id}/`;
        window.location.href = url;
    });

    $('#pentestSeverity').on('click', '.delete-row', function () {
        $("#severityDeleteConfirmationModal").on("show");

        $('#severityDeleteConfirmationModal').on('hidden.bs.modal', function (e) {
            console.log('O modal foi fechado');
            window.location.reload();
        });

        $('#severityDeleteConfirmationButton').click(function (event) {
            const tabela = $('#pentestTable').DataTable();
            const row = event.target.closest('tr');
            const rowData = tabela.row(row).data();

            const url = `/pentest/vulnerabilities/delete/${rowData.id}/`;
            window.location.href = url;
        });
    });
});


function generateAdminActionButtons(data) {
    return `
        <div class="d-flex justify-content-center">
            ${generateActionButtonWithModal('viewModal', 'btn viewButton', data.id, 'fas fa-eye')}
            ${generateActionButton('btn edit-row', '', 'fas fa-pencil-alt', 'color: green;')}
            ${generateActionButtonWithModal('severityDeleteConfirmationModal', 'btn delete-row', '', 'fas fa-trash', 'color: red;')}
            ${generateActionButtonWithModal('changesConfirmationModal', 'btn retest-row', data.id, 'fas fa-sync', 'color: blue;')}
        </div>`;
}

function generateUserActionButtons(data) {
    return `
        <div class="d-flex justify-content-center">
            ${generateActionButtonWithModal('viewModal', 'btn viewButton', data.id, 'fas fa-eye')}
            ${generateActionButtonWithModal('changesConfirmationModal', 'btn retest-row', data.id, 'fas fa-sync', 'color: blue;')}
        </div>`;
}

function generateActionButton(buttonClass, dataId, iconClass, extraStyle = '') {
    const dataIdAttribute = dataId ? `data-id='${dataId}'` : '';
    return `
        <button
            type="button"
            class="actionButton ${buttonClass}"
            ${dataIdAttribute}
        >
            <i class="${iconClass}" style="${extraStyle}"></i>
        </button>`;
}

function generateActionButtonWithModal(targetModal, buttonClass, dataId, iconClass, extraStyle = '') {
    const dataIdAttribute = dataId ? `data-id='${dataId}'` : '';
    return `
    <button
        type="button"
        class="actionButton ${buttonClass}"
        data-bs-toggle="modal"
        data-bs-target="#${targetModal}"
        ${dataIdAttribute}
    >
        <i class="${iconClass}" style="${extraStyle}"></i>
    </button>`;
}


function getSeverityByName(severity) {
    switch (severity) {
        case 'Baixo':
            return 1;
        case 'Medio':
            return 2;
        case 'Alto':
            return 3;
        case 'Critico':
            return 4;

        default:
            return 0;
    }
}
